{"version":3,"sources":["components/TodoForm/TodoForm.jsx","components/TodoListItem/TodoListItem.jsx","components/TodoList/TodoList.jsx","mocks/initialTodoList.js","index.js"],"names":["TodoForm","props","onSubmit","event","state","name","trim","addItem","setState","preventDefault","onChange","target","value","itemName","React","createRef","this","current","focus","className","type","ref","placeholder","Button","variant","Component","TodoListItem","todoClass","item","isDone","isDoneItem","onClick","onToggle","id","style","marginLeft","stopPropagation","onDelete","TodoList","activeList","completeList","items","forEach","push","todoItems","TodoApp","todoItem","Date","now","handleDelete","filter","toggleTodoItem","map","initItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71e51a1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './TodoForm.css'\r\n\r\nclass TodoForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {name: this.props.name};\r\n\r\n    this.itemName = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.itemName.current.focus();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.itemName.current.focus();\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    if(!this.state.name.trim()) return \r\n    this.props.addItem(this.state.name);\r\n    this.setState({name: ''})\r\n    event.preventDefault();\r\n  }\r\n\r\n  onChange = (event) => {\r\n    this.setState(\r\n      {name: event.target.value}\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"form-inline\">\r\n        <input type=\"text\" ref={this.itemName} value={ this.state.name } onChange={this.onChange} className=\"form-control\" placeholder=\"add a new task...\"/>\r\n        <Button variant=\"outline-secondary\" type=\"submit\" >Add</Button> \r\n      </form>\r\n    );   \r\n  }\r\n}\r\n\r\nexport default TodoForm","import React from 'react';\r\nimport './TodoListItem.css'\r\nimport { Check2, Circle } from 'react-bootstrap-icons';\r\n\r\nclass TodoListItem extends React.Component {\r\n  render () {\r\n    const todoClass = this.props.item.isDone ? \"done\" : \"undone\";\r\n\r\n    const isDoneItem = this.props.item.isDone;\r\n    const svgStyle = {\r\n      marginLeft: 15\r\n    }\r\n\r\n    return(\r\n      <li className=\"list-group-item\" onClick={() => {this.props.onToggle(this.props.item.id)}}>\r\n        \r\n        <div className={todoClass}>\r\n\r\n          {isDoneItem \r\n            ? <Check2 />\r\n            : <Circle />\r\n          }\r\n\r\n            <span style={svgStyle}>{this.props.item.value}</span>\r\n      \r\n          <button type=\"button\" className=\"close\" onClick={(event) => {\r\n            event.stopPropagation();\r\n            this.props.onDelete(this.props.item.id)\r\n          }}>&times;</button>\r\n        </div>\r\n      </li>     \r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from '../TodoListItem/TodoListItem'\r\nimport './TodoList.css'\r\n\r\nclass TodoList extends React.Component {\r\n  render () {\r\n    const activeList = [];\r\n    const completeList = [];\r\n\r\n    this.props.items.forEach(item => {\r\n      if(item.isDone) {\r\n        return completeList.push(<TodoListItem key={item.id} item={item} onDelete={this.props.onDelete} onToggle={this.props.onToggle} />)\r\n      } else {\r\n        return activeList.push(<TodoListItem key={item.id} item={item} onDelete={this.props.onDelete} onToggle={this.props.onToggle} />)\r\n      }\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <ul className='list-group'>\r\n          {activeList}\r\n        </ul>\r\n        <hr/> \r\n        <ul className='list-group'>\r\n          {completeList}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;","const todoItems = [];\r\ntodoItems.push({id: 1, value: \"learn js\", isDone: true});\r\ntodoItems.push({id: 2, value: \"learn react\", isDone: false});\r\ntodoItems.push({id: 3, value: \"learn angular\", isDone: false});\r\n\r\nexport default todoItems;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TodoForm from './components/TodoForm/TodoForm'\r\nimport TodoList from './components/TodoList/TodoList';\r\nimport todoItems from './mocks/initialTodoList';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass TodoApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { todoItems: this.props.initItems };\r\n  }\r\n\r\n  addItem = (itemName) => {\r\n    const todoItem = {\r\n      id: Date.now(),\r\n      value: itemName,\r\n      isDone: false\r\n    }\r\n\r\n    this.setState(state => {\r\n      const todoItems = [...state.todoItems, todoItem]\r\n\r\n      return { todoItems };\r\n    });\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    this.setState({\r\n      todoItems: this.state.todoItems.filter(item => item.id !== id)\r\n    })\r\n  }\r\n\r\n  toggleTodoItem = (id) => {\r\n    this.setState(state => {\r\n      const todoItems = state.todoItems.map(item => {\r\n        if (item.id === id) {\r\n          return {\r\n            ...item,\r\n            isDone: !item.isDone,\r\n          };\r\n        }\r\n   \r\n        return item;\r\n      })\r\n\r\n      return {todoItems}\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"main\">\r\n        <h1 className='title'>Todo list</h1>\r\n        <TodoForm addItem={this.addItem} name={''} />\r\n        <TodoList items={this.state.todoItems} onDelete={this.handleDelete} onToggle={this.toggleTodoItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <TodoApp initItems={todoItems} />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}